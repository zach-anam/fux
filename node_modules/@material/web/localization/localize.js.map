{"version":3,"file":"localize.js","sourceRoot":"","sources":["localize.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAUH,6CAA6C;AAC7C,MAAM,UAAU,GAAG,CACf,OAA6B,EAAE,GAAG,MAAiB;IACrD,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;KAC3C;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,6CAA6C;AAC7C,MAAM,UAAU,GAAG,CACf,QAAW,EAAE,OAAoB;IACnC,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {TemplateResult} from 'lit';\n\n/** Options object to the `msg()` function */\nexport interface MsgOptions {\n  id?: string;\n  desc?: string;\n}\n\n/** stand-in for lit-localize str function */\nexport function str(\n    strings: TemplateStringsArray, ...values: unknown[]): string {\n  let out = strings[0];\n  for (let i = 1; i < strings.length; i++) {\n    out += String(values[i - 1]) + strings[i];\n  }\n  return out;\n}\n\n/** stand-in for lit-localize msg function */\nexport function msg<T extends(string | TemplateResult)>(\n    template: T, options?: MsgOptions): T {\n  return template;\n}"]}