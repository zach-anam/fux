{"version":3,"file":"autocomplete.js","sourceRoot":"","sources":["autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, PropertyValues, TemplateResult} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {html as staticHtml, StaticValue} from 'lit/static-html.js';\n\nimport {TextField} from '../../textfield/lib/text-field.js';\n\nimport {AutocompleteItem} from './autocompleteitem/autocomplete-item.js';\nimport {AutocompleteList} from './autocompletelist/autocomplete-list.js';\nimport {AutocompleteSurface} from './autocompletesurface/autocomplete-surface.js';\n\n/** @soyCompatible */\nexport abstract class Autocomplete extends TextField {\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  override readonly role = 'combobox';\n  override readonly ariaAutoComplete = 'list';\n\n  /**\n   * The ID prefix for the item elements, used for SSR.\n   */\n  @property({type: String}) itemIdPrefix = 'autocomplete-item';\n\n  protected abstract readonly menuSurfaceTag: StaticValue;\n  protected abstract readonly listTag: StaticValue;\n\n  @query('.md3-autocomplete__menu-surface')\n  menuSurface?: AutocompleteSurface|null;\n  @query('.md3-autocomplete__list') list?: AutocompleteList|null;\n\n  @queryAssignedElements({flatten: true})\n  protected slottedItems?: AutocompleteItem[];\n\n  @property({type: String}) override value = '';\n  @state() protected selectedItem: AutocompleteItem|null = null;\n\n  /** @soyTemplate */\n  override render(): TemplateResult {\n    return html`<div class=\"md3-autocomplete ${\n        classMap(this.getAutocompleteRenderClasses())}\"\n            @click=${this.handleClicked}\n            @focusout=${this.handleFocusout}\n            @action=${this.handleAction}\n            @input=${this.handleInput}\n            @keydown=${this.handleKeydown}\n            @keyup=${this.handleKeyup}>\n            ${super.render()}\n            ${this.renderMenuSurface()}</div>`;\n  }\n\n  /** @soyTemplate */\n  protected getAutocompleteRenderClasses(): ClassInfo {\n    return {};\n  }\n\n  protected override updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has('selectedItem')) {\n      this.updateSelectedItem();\n      // TODO(b/265209253): implement\n      // this.ariaActiveDescendant = this.selectedItem?.itemId ?? null;\n    }\n    if (changedProperties.has('value')) {\n      this.dispatchEvent(new CustomEvent(\n          'autocomplete-value-changed',\n          {detail: {value: this.value}, bubbles: true, composed: true}));\n    }\n  }\n\n  override firstUpdated(changedProperties: PropertyValues) {\n    console.warn('<md-autocomplete> is not yet implemented.');\n    super.firstUpdated(changedProperties);\n    this.menuSurface!.anchor = this;\n  }\n\n  /** @soyTemplate */\n  protected renderMenuSurface(): TemplateResult {\n    return staticHtml`<${this.menuSurfaceTag}\n      class=\"md3-autocomplete__menu-surface\">\n      <${this.listTag} class=\"md3-autocomplete__list\">\n        <slot></slot>\n      </${this.listTag}>\n    </${this.menuSurfaceTag}>`;\n  }\n\n  isOpen() {\n    return this.menuSurface?.open || false;\n  }\n\n  open() {\n    this.menuSurface?.show();\n    this.ariaExpanded = 'true';\n  }\n\n  close() {\n    this.menuSurface?.close();\n    this.selectedItem = null;\n    this.ariaExpanded = 'false';\n  }\n\n  protected handleClicked(event: PointerEvent) {\n    // When clicking the list (not items nor text field) the menu should stay\n    // open.\n    if (this.isOpen() &&\n        (event.target as Node)?.parentNode !== this.menuSurface) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  protected override handleFocusout() {\n    if (this.matches(':focus-within')) {\n      this.getInput().focus();\n      return;\n    }\n    this.close();\n    this.focused = false;\n  }\n\n  protected handleAction(event: CustomEvent<{item: AutocompleteItem}>) {\n    const detail = event.detail;\n    this.value = detail.item.headline;\n  }\n\n  protected handleKeydown(event: KeyboardEvent) {\n    let bubble = true;\n    const altKey = event.altKey;\n\n    switch (event.key) {\n      case 'Enter':\n        if (this.selectedItem) {\n          this.value = this.selectedItem.headline;\n        }\n        this.close();\n        bubble = false;\n        break;\n\n      case 'ArrowDown':\n        if (!this.slottedItems) return;\n        if (this.slottedItems.length) {\n          if (this.selectedItem) {\n            this.selectedItem = this.getNextItem();\n          } else {\n            this.open();\n            if (!altKey) {\n              this.selectedItem = this.slottedItems[0];\n            }\n          }\n        }\n        bubble = false;\n        break;\n\n      case 'ArrowUp':\n        if (!this.slottedItems) return;\n        if (this.slottedItems.length) {\n          if (this.selectedItem) {\n            this.selectedItem = this.getPreviousItem();\n          } else {\n            this.open();\n            if (!altKey) {\n              this.selectedItem =\n                  this.slottedItems[this.slottedItems.length - 1];\n            }\n          }\n        }\n        bubble = false;\n        break;\n\n      case 'Escape':\n        if (this.isOpen()) {\n          this.close();\n        } else {\n          this.value = '';\n        }\n        this.selectedItem = null;\n        bubble = false;\n        break;\n\n      case 'Tab':\n        if (this.selectedItem) {\n          this.value = this.selectedItem.headline;\n        }\n        this.close();\n        break;\n\n      case 'Home':\n        this.setSelectionRange(0, 0);\n        this.selectedItem = null;\n        bubble = false;\n        break;\n\n      case 'End':\n        this.setSelectionRange(this.value.length, this.value.length);\n        this.selectedItem = null;\n        bubble = false;\n        break;\n\n      default:\n        break;\n    }\n\n    if (bubble) return;\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  protected handleKeyup(event: KeyboardEvent) {\n    let bubble = true;\n\n    switch (event.key) {\n      case 'Backspace':\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        this.selectedItem = null;\n        bubble = false;\n        break;\n\n      default:\n        break;\n    }\n\n    if (bubble) return;\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * When selectedItem is updated, item prefixes and aria-selected status will\n   * be updated along with scrolling the selected item into view, if needed.\n   */\n  private updateSelectedItem() {\n    if (!this.slottedItems) return;\n    this.slottedItems.forEach((item, index) => {\n      // TODO(b/265209253): implement\n      // item.itemId = `${this.itemIdPrefix}-${index}`;\n\n      if (this.selectedItem && item === this.selectedItem && this.list) {\n        item.ariaSelected = 'true';\n\n        // Scroll into view\n        if (this.list.scrollTop + this.list.offsetHeight <\n            item.offsetTop + item.offsetHeight) {\n          this.list.scrollTop =\n              item.offsetTop + item.offsetHeight - this.list.offsetHeight;\n        } else if (this.list.scrollTop > item.offsetTop + 2) {\n          this.list.scrollTop = item.offsetTop;\n        }\n      } else {\n        item.ariaSelected = 'false';\n      }\n    });\n  }\n\n  private getPreviousItem(): AutocompleteItem|null {\n    if (!this.slottedItems) return null;\n    const index =\n        this.selectedItem ? this.slottedItems.indexOf(this.selectedItem) : 0;\n    const length = this.slottedItems.length;\n    return this.slottedItems[(index - 1 + length) % length];\n  }\n\n  private getNextItem(): AutocompleteItem|null {\n    if (!this.slottedItems) return null;\n    const index =\n        this.selectedItem ? this.slottedItems.indexOf(this.selectedItem) : 0;\n    const length = this.slottedItems.length;\n    return this.slottedItems[(index + 1) % length];\n  }\n}\n"]}