{"version":3,"file":"link-button.js","sourceRoot":"","sources":["link-button.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,IAAI,EAAiB,MAAM,KAAK,CAAC;AACzC,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAY,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AAChE,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AACvD,OAAO,EAAC,IAAI,EAAC,MAAM,wBAAwB,CAAC;AAE5C,OAAO,EAAC,MAAM,EAAC,MAAM,2BAA2B,CAAC;AAEjD,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAUnC,gEAAgE;AAChE,MAAM,OAAgB,UAAW,SAAQ,MAAM;IAA/C;;QAWE;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;IA8B5B,CAAC;IA5BC,iDAAiD;IAC9B,gBAAgB;QACjC,OAAO;YACL,0BAA0B,EAAE,IAAI,CAAC,OAAO;SACzC,CAAC;IACJ,CAAC;IAEkB,MAAM;QACvB,OAAO,IAAI,CAAA;;+BAEgB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;kBAC9C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;oBAClB,SAAS,CAAC,IAAI,CAAC,MAAoB,CAAC;wBAChC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;oBAC7B,IAAI,CAAC,WAAW;mBACjB,IAAI,CAAC,UAAU;0BACR,IAAI,CAAC,iBAAiB;oBAC5B,IAAI,CAAC,WAAW;YACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;cACpB,IAAI,CAAC,eAAe,EAAE;cACtB,IAAI,CAAC,eAAe,EAAE;cACtB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC;cACxC,IAAI,CAAC,aAAa,EAAE;cACpB,IAAI,CAAC,iBAAiB,EAAE;cACxB,IAAI,CAAC,UAAU,EAAE;cACjB,IAAI,CAAC,WAAW,EAAE;cAClB,CAAC;IACb,CAAC;CACF;AAxC2B;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;wCAAe;AAKd;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;0CAAiB","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {ripple} from '../../ripple/directive.js';\n\nimport {Button} from './button.js';\n\n/**\n * Note that we cast `linkTarget` to this type, below. The Lit compiler\n * enforces the `target` attribute value to be of this type, but this is not\n * compatible with the generated Wit Soy/JS, which expects `linkTarget`\n * to be a string type.\n */\ntype LinkTarget = '_blank'|'_parent'|'_self'|'_top';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport abstract class LinkButton extends Button {\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  @property({type: String}) href!: string;\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `target` attribute.\n   */\n  @property({type: String}) target!: string;\n\n  /**\n   * Link buttons cannot be disabled.\n   */\n  override disabled = false;\n\n  // Note: link buttons cannot have trailing icons.\n  protected override getRenderClasses(): ClassInfo {\n    return {\n      'md3-button--icon-leading': this.hasIcon,\n    };\n  }\n\n  protected override render(): TemplateResult {\n    return html`\n      <span class=\"md3-link-button-wrapper\">\n        <a class=\"md3-button ${classMap(this.getRenderClasses())}\"\n          href=\"${ifDefined(this.href)}\"\n          target=\"${ifDefined(this.target as LinkTarget)}\"\n          aria-label=\"${ifDefined(this.ariaLabel)}\"\n          @focus=\"${this.handleFocus}\"\n          @blur=\"${this.handleBlur}\"\n          @pointerdown=\"${this.handlePointerDown}\"\n          @click=\"${this.handleClick}\"\n          ${ripple(this.getRipple)}>\n            ${this.renderFocusRing()}\n            ${this.renderElevation()}\n            ${when(this.showRipple, this.renderRipple)}\n            ${this.renderOutline()}\n            ${this.renderTouchTarget()}\n            ${this.renderIcon()}\n            ${this.renderLabel()}</a>\n      </span>`;\n  }\n}\n"]}