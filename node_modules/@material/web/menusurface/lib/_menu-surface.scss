//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// stylelint-disable selector-class-pattern --
// Selector '.md3-*' should only be used in this project.

@use 'sass:map';
@use '../../elevation/lib/elevation';
@use '../../sass/theme';
@use './md-comp-menu-surface';

$_custom-property-prefix: 'menu-surface';
$_fade-in-duration: 0.03s;
$_fade-out-duration: 0.075s;
$_scale-duration: 0.12s;
$_min-distance-from-edge: 32px;
$_max-width: calc(100vw - #{$_min-distance-from-edge});
$_max-height: calc(100vh - #{$_min-distance-from-edge});
$_z-index: 8; // One above md3-dialog
$_deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;

@mixin theme($tokens) {
  $tokens: theme.validate-theme(md-comp-menu-surface.values(), $tokens);
  $tokens: elevation.resolve-tokens($tokens, 'container-elevation');
  $tokens: theme.create-theme-vars($tokens, $_custom-property-prefix);

  @include theme.emit-theme-vars($tokens);
}

@mixin styles() {
  $tokens: md-comp-menu-surface.values();
  $tokens: elevation.resolve-tokens($tokens, 'container-elevation');
  $tokens: theme.create-theme-vars($tokens, $_custom-property-prefix);

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: #{$value};
    }
  }

  .md3-menu-surface {
    border-radius: var(--_container-shape);
    box-sizing: border-box;
    display: none;
    opacity: 0;
    overflow: auto;
    margin: 0;
    max-height: $_max-height;
    max-width: $_max-width;
    padding: 0;
    position: absolute;
    transform: scale(1);
    transform-origin: top left;
    transition: opacity $_fade-in-duration linear,
      transform $_scale-duration $_deceleration-curve-timing-function,
      height 250ms $_deceleration-curve-timing-function;
    will-change: transform, opacity;
    z-index: $_z-index;

    @include elevation.theme(
      (
        level: var(--_container-elevation),
        shadow-color: var(--_container-shadow-color),
        surface-tint: var(--_container-surface-tint-layer-color),
      )
    );

    md-elevation {
      z-index: 0;
    }

    &:focus {
      outline: none;
    }

    &--animating-open {
      display: inline-block;
      opacity: 0;
      transform: scale(0.8);
    }

    // Render this after `--animating-open` to override `opacity` & `transform`
    // CSS properties.
    &--open {
      display: inline-block;
      opacity: 1;
      transform: scale(1);
    }

    &--animating-closed {
      display: inline-block;
      opacity: 0;
      transition: opacity $_fade-out-duration linear;
    }
  }

  .md3-menu-surface--anchor {
    overflow: visible;
    position: relative;
  }

  .md3-menu-surface--fixed {
    position: fixed;
  }

  .md3-menu-surface--fullwidth {
    width: 100%;
  }

  // Used by filled variants of GM components to conditionally flatten the top
  // corners of the menu.
  .md3-menu-surface--is-open-below {
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
  }
}
