{"version":3,"file":"constants.js","sourceRoot":"","sources":["constants.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,MAAM,UAAU,GAAG;IACjB,MAAM,EAAE,0BAA0B;IAClC,gBAAgB,EAAE,oCAAoC;IACtD,cAAc,EAAE,kCAAkC;IAClD,KAAK,EAAE,yBAAyB;IAChC,aAAa,EAAE,iCAAiC;IAChD,IAAI,EAAE,wBAAwB;IAC9B,IAAI,EAAE,kBAAkB;CACzB,CAAC;AAEF,0CAA0C;AAC1C,MAAM,OAAO,GAAG;IACd,YAAY,EAAE,uBAAuB;IACrC,aAAa,EAAE,wBAAwB;IACvC,YAAY,EAAE,uBAAuB;IACrC,aAAa,EAAE,wBAAwB;IACvC,kBAAkB,EAAE;QAClB,uBAAuB;QACvB,oCAAoC;QACpC,sBAAsB;QACtB,uBAAuB;QACvB,yBAAyB;QACzB,6DAA6D;KAC9D,CAAC,IAAI,CAAC,IAAI,CAAC;CACb,CAAC;AACF,yCAAyC;AAEzC,MAAM,OAAO,GAAG;IACd,qDAAqD;IACrD,wBAAwB,EAAE,GAAG;IAE7B,sDAAsD;IACtD,yBAAyB,EAAE,EAAE;IAE7B;;;OAGG;IACH,cAAc,EAAE,EAAE;IAElB;;;OAGG;IACH,kCAAkC,EAAE,IAAI;IAExC;;;;;OAKG;IACH,mBAAmB,EAAE,EAAE;CACxB,CAAC;AAEF;;GAEG;AACH,IAAK,SAKJ;AALD,WAAK,SAAS;IACZ,6CAAU,CAAA;IACV,6CAAU,CAAA;IACV,2CAAS,CAAA;IACT,iDAAY,CAAA;AACd,CAAC,EALI,SAAS,KAAT,SAAS,QAKb;AAED;;;;;;GAMG;AACH,IAAK,MAaJ;AAbD,WAAK,MAAM;IACT,2CAAY,CAAA;IACZ,6CAA2B,CAAA;IAC3B,iDAA8B,CAAA;IAC9B,mDACsC,CAAA;IACtC,6CAA8B,CAAA;IAC9B,0CACwC,CAAA;IACxC,mDACyC,CAAA;IACzC,gDACsB,CAAA;AACxB,CAAC,EAbI,MAAM,KAAN,MAAM,QAaV;AAED,OAAO,EAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst cssClasses = {\n  ANCHOR: 'md3-menu-surface--anchor',\n  ANIMATING_CLOSED: 'md3-menu-surface--animating-closed',\n  ANIMATING_OPEN: 'md3-menu-surface--animating-open',\n  FIXED: 'md3-menu-surface--fixed',\n  IS_OPEN_BELOW: 'md3-menu-surface--is-open-below',\n  OPEN: 'md3-menu-surface--open',\n  ROOT: 'md3-menu-surface',\n};\n\n// tslint:disable:object-literal-sort-keys\nconst strings = {\n  CLOSED_EVENT: 'MDCMenuSurface:closed',\n  CLOSING_EVENT: 'MDCMenuSurface:closing',\n  OPENED_EVENT: 'MDCMenuSurface:opened',\n  OPENING_EVENT: 'MDCMenuSurface:opening',\n  FOCUSABLE_ELEMENTS: [\n    'button:not(:disabled)',\n    '[href]:not([aria-disabled=\"true\"])',\n    'input:not(:disabled)',\n    'select:not(:disabled)',\n    'textarea:not(:disabled)',\n    '[tabindex]:not([tabindex=\"-1\"]):not([aria-disabled=\"true\"])',\n  ].join(', '),\n};\n// tslint:enable:object-literal-sort-keys\n\nconst numbers = {\n  /** Total duration of menu-surface open animation. */\n  TRANSITION_OPEN_DURATION: 120,\n\n  /** Total duration of menu-surface close animation. */\n  TRANSITION_CLOSE_DURATION: 75,\n\n  /**\n   * Margin left to the edge of the viewport when menu-surface is at maximum\n   * possible height. Also used as a viewport margin.\n   */\n  MARGIN_TO_EDGE: 32,\n\n  /**\n   * Ratio of anchor width to menu-surface width for switching from corner\n   * positioning to center positioning.\n   */\n  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67,\n\n  /**\n   * Amount of time to wait before restoring focus when closing the menu\n   * surface. This is important because if a touch event triggered the menu\n   * close, and the subsequent mouse event occurs after focus is restored, then\n   * the restored focus would be lost.\n   */\n  TOUCH_EVENT_WAIT_MS: 30,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n */\nenum CornerBit {\n  BOTTOM = 1,    // 0001\n  CENTER = 2,    // 0010\n  RIGHT = 4,     // 0100\n  FLIP_RTL = 8,  // 1000\n}\n\n/**\n * Enum for representing an element corner for positioning the menu-surface.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n */\nenum Corner {\n  TOP_LEFT = 0,\n  TOP_RIGHT = CornerBit.RIGHT,\n  BOTTOM_LEFT = CornerBit.BOTTOM,\n  BOTTOM_RIGHT =\n      CornerBit.BOTTOM | CornerBit.RIGHT,  // tslint:disable-line:no-bitwise\n  TOP_START = CornerBit.FLIP_RTL,\n  TOP_END =\n      CornerBit.FLIP_RTL | CornerBit.RIGHT,  // tslint:disable-line:no-bitwise\n  BOTTOM_START =\n      CornerBit.BOTTOM | CornerBit.FLIP_RTL,  // tslint:disable-line:no-bitwise\n  BOTTOM_END = CornerBit.BOTTOM | CornerBit.RIGHT |\n      CornerBit.FLIP_RTL,  // tslint:disable-line:no-bitwise\n}\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n"]}