{"version":3,"file":"strong-focus.js","sourceRoot":"","sources":["strong-focus.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAOH,MAAM,WAAW;IAAjB;QACE,YAAO,GAAG,KAAK,CAAC;IAIlB,CAAC;IAHC,UAAU,CAAC,OAAgB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;AAED;;;GAGG;AACH,IAAI,WAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;AAEjD;;GAEG;AACH,MAAM,wBAAwB,GAC1B,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AAExE,SAAS,cAAc,CAAC,CAAgB;IACtC,IAAI,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACvC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC9B;AACH,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,KAAK,CAAC,WAAwB,EAAE,oBAAoB,GAAG,KAAK;IAC1E,WAAW,GAAG,WAAW,CAAC;IAC1B,IAAI,oBAAoB,EAAE;QACxB,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;KACpD;SAAM;QACL,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;KACvD;AACH,CAAC;AAED;;;;GAIG;AACH,IAAI,YAAY,GAAG,KAAK,CAAC;AAEzB;;;;;GAKG;AACH,MAAM,UAAU,qBAAqB;IACnC,OAAO,YAAY,IAAI,WAAW,CAAC,OAAO,CAAC;AAC7C,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,mBAAmB,CAAC,KAAc;IAChD,YAAY,GAAG,KAAK,CAAC;AACvB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,mBAAmB;IACjC,OAAO,YAAY,CAAC;AACtB,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,YAAY;IAC1B,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AAED,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\ninterface StrongFocus {\n  visible: boolean;\n  setVisible(visible: boolean): void;\n}\n\nclass FocusGlobal implements StrongFocus {\n  visible = false;\n  setVisible(visible: boolean) {\n    this.visible = visible;\n  }\n}\n\n/**\n * This object can be overwritten by the `setup()` function to use a different\n * focus coordination object.\n */\nlet focusObject: StrongFocus = new FocusGlobal();\n\n/**\n * Set of keyboard event codes that correspond to keyboard navigation\n */\nconst KEYBOARD_NAVIGATION_KEYS =\n    new Set(['Tab', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown']);\n\nfunction keydownHandler(e: KeyboardEvent) {\n  if (KEYBOARD_NAVIGATION_KEYS.has(e.key)) {\n    focusObject.setVisible(true);\n  }\n}\n\n/**\n * Set up integration with alternate global focus tracking object\n *\n * @param focusGlobal A global focus object to coordinate between multiple\n *     systems\n * @param enableKeydownHandler Set to true to let StrongFocusService listen for\n *     keyboard navigation\n */\nexport function setup(focusGlobal: StrongFocus, enableKeydownHandler = false) {\n  focusObject = focusGlobal;\n  if (enableKeydownHandler) {\n    window.addEventListener('keydown', keydownHandler);\n  } else {\n    window.removeEventListener('keydown', keydownHandler);\n  }\n}\n\n/**\n * Setting for always showing strong focus\n *\n * Defaults to false, controlled by `setForceStrongFocus`\n */\nlet alwaysStrong = false;\n\n/**\n * Returns `true` if the component should show strong focus.\n *\n * By default, strong focus is shown only on keyboard navigation, and not on\n * pointer interaction.\n */\nexport function shouldShowStrongFocus() {\n  return alwaysStrong || focusObject.visible;\n}\n\n/**\n * Control if strong focus should always be shown on component focus\n *\n * Defaults to `false`\n *\n * @param force Forces strong focus on the page. Disables strong focus if false.\n */\nexport function setForceStrongFocus(force: boolean) {\n  alwaysStrong = force;\n}\n\n/**\n * If `true`, strong focus is always shown\n */\nexport function isStrongFocusForced() {\n  return alwaysStrong;\n}\n\n/**\n * Components should call this when a user interacts with a component with a\n * pointing device.\n *\n * By default, this will prevent the strong focus from being shown.\n */\nexport function pointerPress() {\n  focusObject.setVisible(false);\n}\n\nsetup(focusObject, true);"]}