{"version":3,"file":"adapter.js","sourceRoot":"","sources":["adapter.ts"],"names":[],"mappings":"AAAA;;;;GAIG","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {MDCChipActionFocusBehavior, MDCChipActionType} from '../../action/lib/constants.js';\n\nimport {MDCChipAttributes, MDCChipCssClasses, MDCChipEvents} from './constants.js';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipAdapter {\n  /** Adds the given class to the root element. */\n  addClass(className: MDCChipCssClasses): void;\n\n  /** Emits the given event with the given detail. */\n  emitEvent<D extends object>(eventName: MDCChipEvents, eventDetail: D): void;\n\n  /** Returns the child actions provided by the chip. */\n  getActions(): MDCChipActionType[];\n\n  /** Returns the value for the given attribute, if it exists. */\n  getAttribute(attrName: MDCChipAttributes): string|null;\n\n  /** Returns the ID of the root element. */\n  getElementID(): string;\n\n  /** Returns the offset width of the root element. */\n  getOffsetWidth(): number;\n\n  /** Returns true if the root element has the given class. */\n  hasClass(className: MDCChipCssClasses): boolean;\n\n  /** Proxies to the MDCChipAction#isSelectable method. */\n  isActionSelectable(action: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChipAction#isSelected method. */\n  isActionSelected(action: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChipAction#isFocusable method. */\n  isActionFocusable(action: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChipAction#isDisabled method. */\n  isActionDisabled(action: MDCChipActionType): boolean;\n\n  /** Returns true if the text direction is right-to-left. */\n  isRTL(): boolean;\n\n  /** Removes the given class from the root element. */\n  removeClass(className: MDCChipCssClasses): void;\n\n  /** Proxies to the MDCChipAction#setDisabled method. */\n  setActionDisabled(action: MDCChipActionType, isDisabled: boolean): void;\n\n  /** Proxies to the MDCChipAction#setFocus method. */\n  setActionFocus(\n      action: MDCChipActionType, behavior: MDCChipActionFocusBehavior): void;\n\n  /** Proxies to the MDCChipAction#setSelected method. */\n  setActionSelected(action: MDCChipActionType, isSelected: boolean): void;\n\n  /** Sets the style property to the given value. */\n  setStyleProperty(property: string, value: string): void;\n}\n"]}