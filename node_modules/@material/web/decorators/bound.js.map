{"version":3,"file":"bound.js","sourceRoot":"","sources":["bound.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAyCH,MAAM,UACN,KAAK,CACD,MAAS,EAAE,WAAc,EAAE,gBAA6C;IAE1E,MAAM,UAAU,GAA+B,gBAAgB,IAAI;QACjE,YAAY,EAAE,IAAI;QAClB,UAAU,EAAE,IAAI;QAChB,QAAQ,EAAE,IAAI;KACf,CAAC;IAEF,MAAM,mBAAmB,GAAG,IAAI,OAAO,EAAa,CAAC;IACrD,IAAI,GAAgD,CAAC;IACrD,IAAI,GAAgD,CAAC;IAErD,IAAI,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,QAAQ,EAAE;QACzC,GAAG,GAAG;YACJ,MAAM,IAAI,GAAG,IAAS,CAAC,CAAE,iCAAiC;YAC1D,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,oDAAoD;gBACpD,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC;gBAC9B,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;YAED,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAClC,MAAM,KAAK,GACP,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAM,CAAC;gBAClE,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACrC,OAAO,KAAK,CAAC;aACd;YAED,OAAO,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QACxC,CAAC,CAAC;KACH;IAED,IAAI,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,QAAQ,EAAE;QACzC,GAAG,GAAG,UAAkB,KAAQ;YAC9B,MAAM,IAAI,GAAG,IAAS,CAAC,CAAE,iCAAiC;YAC1D,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,UAAU,CAAC,GAAG,EAAE;gBAClB,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAClC;YAED,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC;KACH;IAED,OAAO;QACL,GAAG;QACH,GAAG;QACH,YAAY,EAAE,UAAU,CAAC,YAAY;QACrC,UAAU,EAAE,UAAU,CAAC,UAAU;KAClC,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {FunctionKeys} from '../types/keys.js';\n\n/**\n * Binds a class's method to its instance.\n *\n * @example\n * class MyClass {\n *   \\@bound\n *   foo() { return this; }\n * }\n *\n * const instance = new MyClass();\n * const reference = instance.foo;\n * foo(); // MyClass\n *\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function bound<V extends Function>(\n    target: object, propertyKey: string|symbol,\n    methodDescriptor: TypedPropertyDescriptor<V>): TypedPropertyDescriptor<V>;\n/**\n * Binds a class's function property to its instance.\n *\n * @example\n * class MyClass {\n *   \\@bound\n *   foo = function(this: MyClass) { return this; }\n * }\n *\n * const instance = new MyClass();\n * const reference = instance.foo;\n * foo(); // MyClass\n *\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function bound<T extends object>(\n    target: T, propertyKey: FunctionKeys<T>): any;\nexport function\nbound<T extends object, K extends FunctionKeys<T>, V extends T[K]&Function>(\n    target: T, propertyKey: K, methodDescriptor?: TypedPropertyDescriptor<V>):\n    TypedPropertyDescriptor<V> {\n  const descriptor: TypedPropertyDescriptor<V> = methodDescriptor || {\n    configurable: true,\n    enumerable: true,\n    writable: true,\n  };\n\n  const memoizedBoundValues = new WeakMap<object, V>();\n  let get: TypedPropertyDescriptor<V>['get']|undefined;\n  let set: TypedPropertyDescriptor<V>['set']|undefined;\n\n  if (descriptor.get || descriptor.writable) {\n    get = function(this: T): V {\n      const self = this as T;  // Needed for closure conformance\n      if (descriptor.get) {\n        // Separate variables needed for closure conformance\n        const getter = descriptor.get;\n        const value = getter.call(self);\n        return value.bind(self);\n      }\n\n      if (!memoizedBoundValues.has(self)) {\n        const bound =\n            (descriptor.value || self[propertyKey] as V)?.bind(self) as V;\n        memoizedBoundValues.set(self, bound);\n        return bound;\n      }\n\n      return memoizedBoundValues.get(self)!;\n    };\n  }\n\n  if (descriptor.set || descriptor.writable) {\n    set = function(this: T, value: V) {\n      const self = this as T;  // Needed for closure conformance\n      value = value.bind(self);\n      if (descriptor.set) {\n        descriptor.set.call(self, value);\n      }\n\n      memoizedBoundValues.set(self, value);\n    };\n  }\n\n  return {\n    get,\n    set,\n    configurable: descriptor.configurable,\n    enumerable: descriptor.enumerable,\n  };\n}\n"]}