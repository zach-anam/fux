//
// Copyright 2022 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use 'sass:string';
@use '../../../focus/focus-ring';
@use '../../../sass/theme';
@use '../../../sass/map-ext';
@use '../icon/list-item-icon';
@use '../image/list-item-image';
@use '../video/list-item-video';
@use '../../../ripple/ripple';
@use '../../../tokens';

@mixin theme($tokens) {
  $tokens: theme.validate-theme(tokens.md-comp-list-values(), $tokens);
  $tokens: resolve-tokens($tokens);
  $tokens: theme.create-theme-vars($tokens, list);

  @include theme.emit-theme-vars($tokens);
}

@mixin styles() {
  :host {
    color: unset;

    @include list-item-image.theme(
      (
        list-item-leading-image-height: var(--_list-item-leading-image-height),
        list-item-leading-image-width: var(--_list-item-leading-image-width),
        list-item-leading-image-shape: var(--_list-item-leading-image-shape),
      )
    );
    @include list-item-video.theme(
      (
        list-item-small-leading-video-height:
          var(--_list-item-small-leading-video-height),
        list-item-large-leading-video-height:
          var(--_list-item-large-leading-video-height),
        list-item-leading-video-width: var(--_list-item-leading-video-width),
        list-item-leading-video-shape: var(--_list-item-leading-video-shape),
      )
    );
    @include focus-ring.theme(
      (
        offset-vertical: -2px,
        offset-horizontal: -3px,
        shape: map.get(tokens.md-sys-shape-values(), corner-extra-small),
      )
    );
    @include ripple.theme(
      (
        hover-state-layer-color: var(--_list-item-hover-state-layer-color),
        hover-state-layer-opacity: var(--_list-item-hover-state-layer-opacity),
        pressed-state-layer-color: var(--_list-item-pressed-state-layer-color),
        pressed-state-layer-opacity:
          var(--_list-item-pressed-state-layer-opacity),
        focus-state-layer-color: var(--_list-item-focus-state-layer-color),
        focus-state-layer-opacity: var(--_list-item-focus-state-layer-opacity),
      )
    );
  }

  .list-item {
    align-items: center;
    box-sizing: border-box;
    display: flex;
    outline: none;
    position: relative;
    width: 100%;
    text-decoration: none;
    background-color: var(--_list-item-container-color);
    border-radius: var(--_list-item-container-shape);

    &.enabled {
      cursor: pointer;
    }

    &.disabled {
      pointer-events: none;
    }
  }

  .with-one-line {
    min-height: var(--_list-item-one-line-container-height);
  }

  .with-two-line {
    min-height: var(--_list-item-two-line-container-height);
  }

  .with-three-line {
    min-height: var(--_list-item-three-line-container-height);
  }

  .start {
    flex: 0 0 auto;
    z-index: 1;

    @include list-item-icon.theme(
      (
        list-item-icon-color: var(--_list-item-leading-icon-color),
        list-item-icon-size: var(--_list-item-leading-icon-size),
      )
    );

    :hover & {
      @include list-item-icon.theme(
        (
          list-item-icon-color: var(--_list-item-hover-leading-icon-icon-color),
        )
      );
    }

    :active & {
      @include list-item-icon.theme(
        (
          list-item-icon-color:
            var(--_list-item-pressed-leading-icon-icon-color),
        )
      );
    }

    .disabled & {
      @include list-item-icon.theme(
        (
          list-item-icon-color: var(--_list-item-disabled-leading-icon-color),
          list-item-icon-opacity:
            var(--_list-item-disabled-leading-icon-opacity),
        )
      );
    }

    .with-leading-thumbnail &,
    .with-leading-image & {
      padding-inline-start: 16px;
    }

    .with-leading-video & {
      padding-inline-start: 0;
    }
  }

  .body {
    box-sizing: border-box;
    flex: 1 0 0;
    padding-inline-start: 16px;
    width: 100%;
    z-index: 1;
  }

  .end {
    flex: 0 0 auto;
    padding-inline-end: 24px;
    z-index: 1;

    @include list-item-icon.theme(
      (
        list-item-icon-color: var(--_list-item-trailing-icon-color),
        list-item-icon-size: var(--_list-item-trailing-icon-size),
      )
    );

    :hover & {
      @include list-item-icon.theme(
        (
          list-item-icon-color: var(--_list-item-hover-trailing-icon-icon-color),
        )
      );
    }

    :active & {
      @include list-item-icon.theme(
        (
          list-item-icon-color:
            var(--_list-item-pressed-trailing-icon-icon-color),
        )
      );
    }

    .disabled & {
      @include list-item-icon.theme(
        (
          list-item-icon-color: var(--_list-item-disabled-trailing-icon-color),
          list-item-icon-opacity:
            var(--_list-item-disabled-trailing-icon-opacity),
        )
      );
    }
  }

  .label-text {
    display: flex;
    color: var(--_list-item-label-text-color);
    font-family: var(--_list-item-label-text-font);
    font-size: var(--_list-item-label-text-size);
    letter-spacing: var(--_list-item-label-text-tracking);
    font-weight: var(--_list-item-label-text-weight);
    line-height: var(--_list-item-label-text-line-height);

    .disabled & {
      color: var(--_list-item-disabled-label-text-color);
      opacity: var(--_list-item-disabled-label-text-opacity);
    }
  }

  .supporting-text {
    display: block;
    padding-block-start: 4px;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    width: 100%;
    color: var(--_list-item-supporting-text-color);
    font-family: var(--_list-item-supporting-text-font);
    font-size: var(--_list-item-supporting-text-size);
    letter-spacing: var(--_list-item-supporting-text-tracking);
    font-weight: var(--_list-item-supporting-text-weight);
    line-height: var(--_list-item-supporting-text-line-height);

    .disabled & {
      color: var(--_list-item-disabled-label-text-color);
      opacity: var(--_list-item-disabled-label-text-opacity);
    }
  }

  .supporting-text--multi-line {
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    display: -webkit-box;
    overflow: hidden;
    white-space: normal;
  }

  .trailing-supporting-text {
    padding-inline-start: 16px;
    font-family: var(--_list-item-trailing-supporting-text-font);
    font-size: var(--_list-item-trailing-supporting-text-size);
    letter-spacing: var(--_list-item-trailing-supporting-text-tracking);
    font-weight: var(--_list-item-trailing-supporting-text-weight);
    line-height: var(--_list-item-trailing-supporting-text-line-height);

    .list-item:not(.disabled) & {
      color: var(--_list-item-trailing-supporting-text-color);
    }

    .disabled & {
      color: var(--_list-item-disabled-label-text-color);
      opacity: var(--_list-item-disabled-label-text-opacity);
    }
  }

  .ripple {
    display: inline-flex;
    inset: 0;
    position: absolute;
    z-index: 0;
  }

  .focus-ring {
    z-index: 1;
  }
}

/// Resolves the tokens that are specific to list-item.
///
/// The tokenset for list include list plus all of list item. We do not want to
/// duplicate tokens and custom properties across md-list and md-list-item.
/// So here we resolve list-items tokens by selecting only tokens that have
/// 'list-item' in its name.
@function resolve-tokens($tokens) {
  $list-item-tokens: ();

  @each $token, $value in $tokens {
    $index: string.index($token, list-item);

    @if $index {
      $list-item-tokens: map.set($list-item-tokens, $token, $value);
    }
  }
  @return $list-item-tokens;
}

@mixin private-props() {
  $tokens: resolve-tokens(tokens.md-comp-list-values());
  $tokens: theme.create-theme-vars($tokens, list);

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: #{$value};
    }
  }
}
