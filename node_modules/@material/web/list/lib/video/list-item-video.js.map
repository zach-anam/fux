{"version":3,"file":"list-item-video.js","sourceRoot":"","sources":["list-item-video.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAiB,MAAM,KAAK,CAAC;AAC9D,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE3C;;;GAGG;AACH,MAAM,OAAO,aAAc,SAAQ,UAAU;IAA7C;;QACE;;WAEG;QACwB,UAAK,GAAG,KAAK,CAAC;QAEzC;;WAEG;QACwB,aAAQ,GAAG,KAAK,CAAC;QAE5C;;WAEG;QACwB,UAAK,GAAG,KAAK,CAAC;QAEzC;;WAEG;QACwB,SAAI,GAAG,KAAK,CAAC;QAExC;;WAEG;QACwB,aAAQ,GAAG,KAAK,CAAC;QAE5C;;WAEG;QACwB,gBAAW,GAAG,KAAK,CAAC;QAE/C;;WAEG;QACuB,YAAO,GAAgC,EAAE,CAAC;QAEpE;;WAEG;QACuB,WAAM,GAAG,EAAE,CAAC;QAEtC;;WAEG;QACuB,UAAK,GAAG,EAAE,CAAC;QAErC;;WAEG;QACuB,YAAO,GAAG,EAAE,CAAC;IAmBzC,CAAC;IAjBU,MAAM;QACb,OAAO,IAAI,CAAA;;0BAEW,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;oBACvD,IAAI,CAAC,KAAK,IAAI,OAAO;uBAClB,IAAI,CAAC,MAAM,IAAI,OAAO;mBAC1B,IAAI,CAAC,OAAO,IAAI,OAAO;wBAClB,IAAI,CAAC,QAAQ;qBAChB,IAAI,CAAC,KAAK;oBACX,IAAI,CAAC,IAAI;2BACF,IAAI,CAAC,WAAW;wBACnB,IAAI,CAAC,QAAQ;0CACK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;;;OAG5D,CAAC;IACN,CAAC;CACF;AAhE4B;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;4CAAe;AAKd;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;+CAAkB;AAKjB;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;4CAAe;AAKd;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;2CAAc;AAKb;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;+CAAkB;AAKjB;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;;kDAAqB;AAKrB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;8CAA2C;AAK1C;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;6CAAa;AAKZ;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;4CAAY;AAKX;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;;8CAAc","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\n\n/**\n * @fires loadeddata {Event} Dispatched whenever the native HTMLVideoElement\n * fires the loadeddate event.\n */\nexport class ListItemVideo extends LitElement {\n  /**\n   * Displays the video in a taller format\n   */\n  @property({type: Boolean}) large = false;\n\n  /**\n   * The underlying `<video>`'s `autoplay` property.\n   */\n  @property({type: Boolean}) autoplay = false;\n\n  /**\n   * The underlying `<video>`'s `muted` property.\n   */\n  @property({type: Boolean}) muted = false;\n\n  /**\n   * The underlying `<video>`'s `loop` property.\n   */\n  @property({type: Boolean}) loop = false;\n\n  /**\n   * The underlying `<video>`'s `controls` property.\n   */\n  @property({type: Boolean}) controls = false;\n\n  /**\n   * The underlying `<video>`'s `playsinline` property.\n   */\n  @property({type: Boolean}) playsinline = false;\n\n  /**\n   * The underlying `<video>`'s `preload` property.\n   */\n  @property({type: String}) preload: ''|'auto'|'metadata'|'none' = '';\n\n  /**\n   * The underlying `<video>`'s `poster` property.\n   */\n  @property({type: String}) poster = '';\n\n  /**\n   * The `src` of the video.\n   */\n  @property({type: String}) video = '';\n\n  /**\n   * The `alt` attribute if the video.\n   */\n  @property({type: String}) altText = '';\n\n  override render(): TemplateResult {\n    return html`\n        <video\n            @loadeddata=${() => this.dispatchEvent(new Event('loadeddata'))}\n            .src=\"${this.video || nothing}\"\n            .poster=\"${this.poster || nothing}\"\n            alt=\"${this.altText || nothing}\"\n            .autoplay=${this.autoplay}\n            .muted=${this.muted}\n            .loop=${this.loop}\n            .playsinline=${this.playsinline}\n            .controls=${this.controls}\n            class=\"md3-list-item__video ${this.large ? 'large' : ''}\">\n          <slot></slot>\n        </video>\n      `;\n  }\n}\n"]}